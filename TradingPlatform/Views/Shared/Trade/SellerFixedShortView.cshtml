@using TradingPlatform.Enums
@using TradingPlatform.Models
@using System.Globalization
@using System.Linq;
@model TradingPlatform.Models.TradeModel.TradeViewModel
<tr class="table-header table-header-fixed">
    @if (Model.TradeType == TradeTypes.closeFixed.ToString())
    {
        <th colspan="8">@LocalText.Inst.Get("lable", "tradeTableFixClosedHeader", "анонімні торги з фіксованим обсягом лоту", "анонимные торги с фиксированным объемом лота")</th>

    }
    @if (Model.TradeType == TradeTypes.openFixed.ToString())
    {
        <th colspan="8">@LocalText.Inst.Get("lable", "tradeTableFixOpenedHeader", "публічні торги з фіксованим обсягом лоту", "публичные торги с фиксированным объемом лота")</th>
    }
    @if (Model.TradeType == TradeTypes.quotation.ToString())
    {
        <th colspan="8">@LocalText.Inst.Get("lable", "Trade.SellerFixedShortView", "торги по котуванням", "торги по котировкам")</th>
    }
</tr>
<tr class="table-header table-header-fixed">
    <th style="width: 5%">№</th>
    <th colspan="2" style="width: 25%">@LocalText.Inst.Get("lable", "tradeTableConditions", "Основні умови", "Основные условия")</th>
    <th style="width: 10%">@LocalText.Inst.Get("lable", "tradeTableLotsCount", "Кількість лотів", "Количество лотов"), шт</th>
    <th style="width: 10%">@LocalText.Inst.Get("lable", "tradeTableLotVolume", "Об’єм лоту", "Объём лота"), @StaticData.Inst.GetCatalogValue(@Model.Unit)</th>
    <th style="width: 10%">@LocalText.Inst.Get("lable", "tradeTableTotalVolume", "Загальний об’єм", "Общий объём"), @StaticData.Inst.GetCatalogValue(@Model.Unit)</th>
    <th style="width: 20%">@LocalText.Inst.Get("lable", "tradeTablePrice", "Актуальна ціна", "Актуальная цена"), @StaticData.Inst.GetCatalogValue(@Model.PriceCurrency) / @StaticData.Inst.GetCatalogValue(@Model.Unit) </th>
    @if (@Model.IsApproved)
    {
        if (Model.IsFuture)
        {
            <th style="width: 10%">@LocalText.Inst.Get("lable", "countdownToBegin", "До початку", "До начала")</th>
        }
        if (Model.IsActual)
        {
            <th style="width: 10%">@LocalText.Inst.Get("lable", "countdownToEnd", "До кінця", "До конца")</th>
        }
        if (Model.IsPast)
        {
            <th style="width: 10%">@LocalText.Inst.Get("lable", "countdown0", "Завершено", "Завершен")</th>
        }
    }
    else
    {
        <th style="width: 10%">@LocalText.Inst.Get("lable", "tradeOnApprovingTh", "На схваленні", "На одобрении")</th>
    }
</tr>
<tr class="table-middle summ">
    <td rowspan="3"><span class="auction-id">@Html.DisplayFor(model => model.Id)</span></td>
    <td colspan="2" class="conditions-td">@StaticData.Inst.GetCatalogValue(@Model.ProductName)</td>
    <td rowspan="3"><span class="lotQuantity">@Html.DisplayFor(model => model.LotsCount)</span></td>
    <td rowspan="3"><span class="bulkLot">@Html.DisplayFor(model => model.LotVolume)</span></td>
    <td rowspan="3"><span class="bulkCurrent">@Html.DisplayFor(model => model.TotalVolume)</span></td>
    <td rowspan="3" class="current-price-td">@Model.PriceStart.ToString("C", new NumberFormatInfo() { CurrencySymbol = "", CurrencyDecimalSeparator = ".", CurrencyGroupSeparator = " ", CurrencyDecimalDigits = 2 })</td>
    @if (@Model.IsApproved)
    {
        if (Model.IsFuture)
        {
            <td rowspan="3"> <span data-countdown="@Model.DateBegin.ToServerTicks()" class="text-orange"></span><p>@Model.DateBegin.ToClientTime()</p></td>
        }
        if (Model.IsActual)
        {
            <td rowspan="3"><span data-countdown="@Model.DateEnd.ToServerTicks()" class="text-orange"></span><p>@Model.DateEnd.ToClientTime()</p></td>
        }
        if (Model.IsPast)
        {
            <td rowspan="3"> <span class="text-orange">@LocalText.Inst.Get("text", "tradeFinished", "Торги завершено", "Торг завершен")</span><p class="text-center">@Model.DateEnd.ToClientTime()</p></td>
        }
    }
    else
    {
        @*if (!User.IsInRole("root"))
        {
            <td rowspan="3"> <span class="text-orange">@LocalText.Inst.Get("text", "tradeOnAprovingText", "Торги ще не підтверджено", "Торг еще не утвержден")</span> </td>
        }*@
        if(User.Identity.GetUserContragents().Contains(@Model.SellerId))
        {
            <td rowspan="3">
                @Html.ActionLink(" ", "EditTrade", "Trade", new { id = @Model.Id }, new { @class = "btn btn-primary btn-default glyphicon glyphicon-edit", @aria_hidden = "true", @title = @LocalText.Inst.Get("btn", "EditTrade", "Редагувати", "Изменить условия") })
                @if (@Model.IsPreapproved)
                {
                    <button data-toggle="modal" data-target="#approveTrade" class="btn btn-green" onclick="ApproveTrade(@Model.Id)" title="@LocalText.Inst.Get("btn", "ApproveTradeSeller", "Торг підтверджено модератором, залишився один крок", "Торг подтвержден модератором, остался один шаг")"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span></button>
                }
                else
                {
                    <button class="btn btn-danger" title="@LocalText.Inst.Get("hint", "onApprovingTradeHint", "Торги знаходяться на розгляді", "Торги находятся на рассмотрении")"><span class="glyphicon glyphicon-time" aria-hidden="true"></span></button>
                }
            </td>   
        }
    }
</tr>

<tr class="table-middle">
    <td colspan="2">
        @StaticData.Inst.GetCatalogValue(@Model.ShipmentPoint)
    </td>
</tr>
<tr class="table-middle">
    <td colspan="2">
        @StaticData.Inst.GetCatalogValue(@Model.TransportType)
    </td>
</tr>
@if (!Model.IsFuture)
{
    <tr class="table-bottom">
        <td colspan="3">
            @if (Model.IsActual)
            {
                <span class="my-bets-td"> @LocalText.Inst.Get("text", "ShortTrTablTrade", "ТОРГИ", "ТОРГИ"):</span>
            }
            @if (Model.IsPast)
            {
                <span class="my-bets-td"> @LocalText.Inst.Get("text", "ShortTrTablTradeResult", "РЕЗУЛЬТАТ ТОРГІВ", "РЕЗУЛЬТАТ ТОРГОВ"):</span>
            }
        </td>

        <td>@Model.ActualBets.Count(c => c.IsActual)</td>
        <td>@Html.DisplayFor(model => model.LotVolume)</td>
        <td>@Model.ActualBets.Sum(c => 1 * c.Volume).Value.ToString("C", new NumberFormatInfo() { CurrencySymbol = "", CurrencyDecimalSeparator = ".", CurrencyGroupSeparator = " ", CurrencyDecimalDigits = 0 })</td>
        <td class="current-price-td">
            @if (Model.ActualBets.Any())
            {
                @Model.ActualBets.Average(c => c.Price.Value).ToString("C", new NumberFormatInfo() { CurrencySymbol = "", CurrencyDecimalSeparator = ".", CurrencyGroupSeparator = " ", CurrencyDecimalDigits = 2 })
            }
            else
            {
                <span>0</span>
            }

        </td>
        <td>
            @LocalText.Inst.Get("text", "myBetsSummResult", "на суму:", "на сумму:")
            <br />
            @Model.ActualBets.Where(x => x.IsActual || x.IsRedemption).Sum(x => x.Price.Value * x.Volume.Value).ToString("C", new NumberFormatInfo() { CurrencySymbol = "", CurrencyDecimalSeparator = ".", CurrencyGroupSeparator = " ", CurrencyDecimalDigits = 0 })
@StaticData.Inst.GetCatalogValue(@Model.PriceCurrency)
        </td>
    </tr>
}
<tr>
    <td colspan="8" class="table-trade-gap details-trading">
        <a class="collapsed details-toggle" role="button" data-toggle="collapse" data-parent="#accordion" href="#details-@Model.Id" aria-expanded="true" aria-controls="details-@Model.Id">
            @LocalText.Inst.Get("label", "tradeConditionsTableHeader", "Умови аукціону", "Условия аукциона") <i class="fa fa-angle-double-down" aria-hidden="true"></i><i class="fa fa-angle-double-up" aria-hidden="true"></i>
        </a>
        <div class="collapse" id="details-@Model.Id">
            <div class="details-content">
                <h5>@LocalText.Inst.Get("text", "betsTableHeader", "Ставки покупців", "Ставки покупателей")</h5>
                @if (Model.IsActual)
                {
                    @Html.Partial("_CurrentBetsSeller", Model.ActualBets)
                }
                @if (Model.IsPast)
                {
                    @Html.Partial("_BetsHistorySeller", Model.ActualBets)
                }
            </div>
            @Html.Partial("Trade/TermsView", Model)
            @Html.Partial("Trade/_SellerBuyersListView", Model)
        </div>
    </td>
</tr>
<tr>
    <td colspan="8" class="table-trade-gap"></td>
</tr>
